openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: Lambda prod server
    url: https://peqalf7v96.execute-api.us-east-1.amazonaws.com/Prod
info:
  description: Vote for your lunch.
  version: "1.0.0"
  title: Simple Lunchtime Voter API
  contact:
    email: tim@lunchtimevoter.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /createLunchVote:
    post:
      summary: Creates a new lunch vote
      operationId: createLunchVote
      description: Creates a new lunch vote, returns the GUID for that lunch vote.
      requestBody:
        description: Create a new vote with a particular name at a particular time.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoteCreationRequestObject'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
  /suggest:
    post:
      summary: Suggest a new option for lunch
      operationId: suggest
      requestBody:
        description: Create a new vote with a particular name at a particular time.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSuggestionObject'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
  /vote:
    post:
      summary: Vote for all of the lunch spots that sound good to you.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VoteObject'
      responses:
        '200':
          description: Ack.
        '400':
          description: bad input parameter
  /getSuggestions:
    get:
      parameters:
        - in: path
          name: lunchId
          schema:
            type: string
          required: true
          description: GUID of the lunch to get status of
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
      summary: Returns a list of suggestions for the current lunch vote
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuggestionObject'
        '400':
          description: bad input parameter
  /getVoteStatus:
    get:
      parameters:
        - in: path
          name: lunchId
          schema:
            type: string
          required: true
          description: GUID of the lunch to get status of
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
      summary: Returns a list of suggestions for the current lunch vote. Note that voteResults are only included if we are past the voteTime
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoteStatusObject'

components:
  schemas:
    VoteStatusObject:
      type: object
      required:
        - voteCountdown
        - voteResults
      properties:
        voteCountdown:
          $ref: '#/components/schemas/VoteCountdownObject'
        voteResults:
          $ref: '#/components/schemas/VoteResultsObject'
    VoteCountdownObject:
      type: object
      required:
        - voteTime
        - timeRemaining
      properties:
        voteTime:
          type: string
          example: Monday, 12:00 PM
        timeRemaining:
          type: string
          example: 4 hours, 13 minutes, 12 seconds
    VoteResultsObject:
      type: object
      required:
        - suggestionTitle
        - suggestionDescription
        - voteCount
      properties:
        suggestionTitle:
          type: string
          example: McDonalds
        suggestionDescription:
          type: string
          example: A place to eat fries
        voteCount:
          type: integer
          example: 2
    VoteObject:
      type: object
      required:
        - lunchId
        - acceptableChoices
      properties:
        lunchId:
          type: string
          description: The GUID for your lunchtime vote
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        acceptableChoices:
          type: array
          items:
            type: integer
    VoteCreationRequestObject:
      type: object
      required:
        - voteTime
      properties:
        voteTime:
          type: string
          description: The date/time (Pacific Time) to count the votes, eg "12:00" or "1/1/2020 11:30"
        voteName:
          type: string
          description: The name of your lunchtime vote, eg "Tuesday" or "Bob's Going Away Party"

    CreateSuggestionObject:
      type: object
      required:
        - lunchId
        - suggestionTitle
        - suggestionDescription
      properties:
        lunchId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        suggestionTitle:
          type: string
          example: McDonalds
        suggestionDescription:
          type: string
          example: A place to eat fries
    SuggestionObject:
      type: object
      required:
        - lunchId
        - suggestionNumber
        - suggestionTitle
        - suggestionDescription
      properties:
        lunchId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        suggestionTitle:
          type: string
          example: McDonalds
        suggestionDescription:
          type: string
          example: A place to eat fries